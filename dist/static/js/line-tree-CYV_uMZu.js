var N=Object.defineProperty,V=Object.defineProperties;var A=Object.getOwnPropertyDescriptors;var x=Object.getOwnPropertySymbols;var B=Object.prototype.hasOwnProperty,C=Object.prototype.propertyIsEnumerable;var v=(l,t,a)=>t in l?N(l,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):l[t]=a,y=(l,t)=>{for(var a in t||(t={}))B.call(t,a)&&v(l,a,t[a]);if(x)for(var a of x(t))C.call(t,a)&&v(l,a,t[a]);return l},b=(l,t)=>V(l,A(t));import{d as L,D as p,a5 as T,a0 as q,a1 as I,V as P,a2 as E,c as j,w as s,b as _,e as z,i as d,f as i,u as f,B as S,a3 as w,a4 as H}from"./index-pkOKtQ3P.js";const g=L({name:"ReTreeLine",props:{node:{type:Object,required:!0},data:{type:Array,default:()=>{}},treeData:{type:Array,default:()=>[]},indent:{type:Number,default:16},showLabelLine:{type:Boolean,default:!0}},setup(l,t){const{slots:a}=t;return{getScopedSlot:n=>{if(!n)return null;const r=n.split("||");let e=null;for(let o=0;o<r.length;o++){const u=r[o];e=(a||{})[u]}return e},getSlotValue:(n,r,e=null)=>T(n)?n(r)||e:n||e}},render(){const l=this.getScopedSlot("default"),t=this.getScopedSlot("node-label"),a=this.getScopedSlot("after-node-label"),m=l?this.getSlotValue(l,{node:this.node,data:this.data}):[t?this.getSlotValue(t,{node:this.node,data:this.data}):p("span",{class:"element-tree-node-label"},this.node.label),this.showLabelLine?p("span",{class:"element-tree-node-label-line"}):null,this.getSlotValue(a,{node:this.node,data:this.data})],c=[];let n=this.node;for(;n;){let e=n.parent;if(n.level===1&&!n.parent){if(!this.treeData||!Array.isArray(this.treeData))throw Error("if you using el-tree-v2 (Virtualized Tree) of element-plus,element-tree-line required data.");e={children:Array.isArray(this.treeData)?this.treeData.map(o=>b(y({},o),{key:o.id})):[],level:0,key:"node-0",parent:null}}if(e){const o=(e.children||e.childNodes).findIndex(u=>(u.key||u.id)===(n.key||n.id));c.unshift(o===(e.children||e.childNodes).length-1)}n=e}const r=[];for(let e=0;e<this.node.level;e++)r.push(p("span",{class:{"element-tree-node-line-ver":!0,"last-node-line":c[e]&&this.node.level-1!==e,"last-node-isLeaf-line":c[e]&&this.node.level-1===e},style:{left:this.indent*e+"px"}}));return p("span",{class:"element-tree-node-label-wrapper"},[m].concat(r).concat([p("span",{class:"element-tree-node-line-hor",style:{width:(this.node.isLeaf?24:8)+"px",left:(this.node.level-1)*this.indent+"px"}})]))}}),K=i("div",{class:"card-header"},[i("span",{class:"font-medium"}," 扩展elemenet-plus的树形组件包括虚拟树组件，支持连接线 ")],-1),M=i("div",{class:"card-header"},"普通树结构",-1),O={class:"max-h-[550px] overflow-y-auto"},R={class:"text-sm"},F=i("div",{class:"card-header"},"虚拟树结构",-1),G={class:"max-h-[550px] overflow-y-auto"},J={class:"text-sm"},W=L({name:"LineTree",__name:"line-tree",setup(l){const t=q(I().wholeMenus,!0),a=P(()=>H(t)),m=E(a.value),c={value:"uniqueId",children:"children"};return(n,r)=>{const e=_("el-tree"),o=_("el-card"),u=_("el-col"),k=_("el-tree-v2"),D=_("el-row");return z(),j(o,{shadow:"never"},{header:s(()=>[K]),default:s(()=>[d(D,{gutter:24},{default:s(()=>[d(u,{xs:24,sm:24,md:12,lg:12,xl:12,class:"mb-[20px]"},{default:s(()=>[d(o,{shadow:"never"},{header:s(()=>[M]),default:s(()=>[i("div",O,[d(e,{data:a.value,props:c,"show-checkbox":"","default-expand-all":"","node-key":"uniqueId",indent:30},{default:s(({node:h})=>[d(f(g),{node:h,showLabelLine:!0},{"node-label":s(()=>[i("span",R,S(f(w)(h.data.meta.title)),1)]),_:2},1032,["node"])]),_:1},8,["data"])])]),_:1})]),_:1}),d(u,{xs:24,sm:24,md:12,lg:12,xl:12},{default:s(()=>[d(o,{shadow:"never"},{header:s(()=>[F]),default:s(()=>[i("div",G,[d(k,{data:a.value,props:c,"show-checkbox":"",height:550,"default-expanded-keys":f(m)},{default:s(({node:h})=>[d(f(g),{node:h,treeData:a.value,showLabelLine:!0,indent:30},{"node-label":s(()=>[i("span",J,S(f(w)(h.data.meta.title)),1)]),_:2},1032,["node","treeData"])]),_:1},8,["data","default-expanded-keys"])])]),_:1})]),_:1})]),_:1})]),_:1})}}});export{W as default};
